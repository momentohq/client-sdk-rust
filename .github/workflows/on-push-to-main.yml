name: CD

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    name: Style & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install protoc
        run: ./scripts/install_protoc_linux.sh

      - name: Lint (rustfmt and clippy)
        run: make lint

  generate_readme:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MOMENTO_MACHINE_USER_GITHUB_TOKEN }}

      - name: Generate README
        uses: momentohq/standards-and-practices/github-actions/generate-and-commit-oss-readme@gh-actions-v2
        with:
          project_status: official
          project_stability: alpha
          project_type: sdk
          sdk_language: Rust
          template_file: ./README.template.md
          output_file: ./README.md
          dev_docs_slug: rust
  
  release-please:
    name: Release Please
    runs-on: ubuntu-latest
    needs: [ generate_readme ]
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.MOMENTO_MACHINE_USER_GITHUB_TOKEN }}
          release-type: rust
          package-name: momento
          default-branch: main
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false}]'

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: [ release-please ]
    env:
      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
    if: ${{ needs.release-please.outputs.release_created == 'true' }}
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.MOMENTO_MACHINE_USER_GITHUB_TOKEN }}

      - name: Login to crates.io
        run: cargo login $CARGO_REGISTRY_TOKEN

      - name: Publish
        run: cargo publish
    


# Previous release process below
#  release:
#    runs-on: ubuntu-latest
#    outputs:
#      version: ${{ steps.release.outputs.release }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set release
#        id: semrel
#        uses: go-semantic-release/action@v1
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          allow-initial-development-versions: true
#          force-bump-patch-version: true
#
#      - name: Output release
#        id: release
#        run: echo "::set-output name=release::${{ steps.semrel.outputs.version }}"
#
#  publish:
#    runs-on: macos-latest
#    needs: release
#    env:
#      MOMENTO_API_KEY: ${{ secrets.ALPHA_TEST_AUTH_TOKEN }}
#      CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Install protoc
#        run: ./scripts/install_protoc_osx.sh
#
#      - uses: actions-rs/toolchain@v1
#        with:
#          toolchain: stable
#          components: rustfmt
#          override: true
#
#      - name: Build
#        run: cargo build --verbose
#
#      - name: Integration Tests
#        run: cargo test --tests
#
#      - name: Update Cargo Version
#        run: |
#          chmod +x set_cargo_version.sh
#          ./set_cargo_version.sh ${{ needs.release.outputs.version }}
#          cat Cargo.toml
#        shell: bash
#
#      - name: Login to crates.io
#        run: cargo login $CARGO_REGISTRY_TOKEN
#
#      - name: Publish crate
#        run: cargo publish --allow-dirty