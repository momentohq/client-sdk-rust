name: CI

on:
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  rustfmt:
    name: Style & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Commitlint and Other Shared Build Steps
        uses: momentohq/standards-and-practices/github-actions/shared-build@gh-actions-v1

      - name: rustfmt
        run: cargo fmt -- --check

      - name: Rigorous lint via Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -W clippy::unwrap_used

  build_rust:
    runs-on: ubuntu-latest
    env:
      TEST_AUTH_TOKEN: ${{ secrets.ALPHA_TEST_AUTH_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Cargo Check
        run: cargo check
      - name: Unit Tests
        run: cargo test --lib
      - name: Doc Tests
        run: cargo test --doc
      - name: Integration Tests
        run: cargo test --tests

  rustfmt-build-examples:
    name: Style & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Commitlint and Other Shared Build Steps
        uses: momentohq/standards-and-practices/github-actions/shared-build@gh-actions-v1

      - name: rustfmt -> rigorous lint via Clippy -> build
        id: validation
        continue-on-error: true
        run: |
          pushd examples
            cargo fmt -- --check
            cargo clippy --all-targets --all-features -- -D warnings -W clippy::unwrap_used 
            cargo build --verbose
          popd
      - name: Send CI failure mail
        if: ${{ steps.validation.outcome == 'failure' }}
        uses: ./.github/actions/error-email-action
        with:
          username: ${{secrets.MOMENTO_ROBOT_GMAIL_USERNAME}}
          password: ${{secrets.MOMENTO_ROBOT_GMAIL_PASSWORD}}
      - name: Flag Job Failure
        if: ${{ steps.validation.outcome == 'failure' }}
        run: exit 1
